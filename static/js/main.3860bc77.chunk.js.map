{"version":3,"sources":["context/pokemon-context.js","img/PngItem_25193.png","components/Header.js","components/Footer.js","reducers/pokemon.js","components/Loader.js","img/no-image.png","components/CardPokemon.js","components/MainLoader.js","pages/HomePage.js","pages/NotFoundPage.js","components/LoadMovesPokemon.js","components/ImagePokemon.js","components/EvolutionImage.js","components/Evolution.js","components/Species.js","pages/SinglePokemonPage.js","pages/MyPokemons.js","routers/Routers.js","App.js","serviceWorker.js","index.js"],"names":["PokemonContext","React","createContext","Header","useState","scrolled","setScrolled","pokemonMyList","useContext","handleScroll","offset","window","scrollY","useEffect","addEventListener","navbarClasses","push","className","join","to","Badge","variant","length","alt","src","pokeBall","Footer","pokemonReducer","state","action","type","jsonListPokemons","jsonPokemon","jsonSpecies","id","name","url","img","checked","weight","height","filter","pokemon","LoaderImage","Spinner","animation","role","CardPokemon","props","setPokemon","isLoaded","setIsLoaded","pokemonMyListDispatch","ourRequest","Axios","CancelToken","source","a","get","cancelToken","token","then","response","console","log","data","map","item","catch","thrown","isCancel","message","loadData","cancel","localStorage","setItem","JSON","stringify","Loader","sprites","split","slice","other","front_default","imgNotFound","types","i","arr","key","Form","Check","onChange","e","target","addToList","label","defaultChecked","MainLoader","ListOfPokemons","useReducer","jsonDispatch","match","params","page","numberOnPage","setNumberOnPage","pageUrl","setPageUrl","numberOfPages","setNumberOfPages","Math","ceil","count","isNaN","history","clickPrev","debounce","clickNext","disabled","previous","onClick","next","results","NotFoundPage","LoadMovesPokemon","moves","setMoves","effect_entries","short_effect","replace","effect_chance","style","width","accuracy","power","ImagePokemon","EvolutionImage","Evolution","evo","setEvo","evolution_chain","chain","evolves_to","species","evolution_details","min_level","Species","respons","Provider","value","base_happiness","capture_rate","growth_rate","SinglePokemonPage","goBack","base_experience","abilities","ability","stats","stat","base_stat","showThumbs","showIndicators","move","MyPokemons","Table","bordered","responsive","href","Button","AppRouter","path","component","HomePage","exact","App","parse","getItem","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3860bc77.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst PokemonContext = React.createContext()\r\n\r\nexport default PokemonContext","export default __webpack_public_path__ + \"static/media/PngItem_25193.d466ebfa.png\";","import React, { useState, useEffect, useContext } from \"react\"\r\n\r\nimport {Link} from \"react-router-dom\"\r\nimport PokemonContext from \"../context/pokemon-context\"\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport pokeBall from '../img/PngItem_25193.png';\r\n\r\nconst Header = () => {    \r\n    const [scrolled,setScrolled]=useState(false);\r\n    const {pokemonMyList} = useContext(PokemonContext)\r\n    \r\n    const handleScroll=() => {\r\n    const offset=window.scrollY;\r\n        if(offset > 0 ){\r\n        setScrolled(true);\r\n        }\r\n        else{\r\n        setScrolled(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener('scroll',handleScroll)\r\n    })\r\n    let navbarClasses=[];\r\n    if(scrolled){\r\n        navbarClasses.push('sticky');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"header-outer\">\r\n            <header className={navbarClasses.join(\" \")}>\r\n                <div className=\"container h-100 d-flex justify-content-end align-items-center\">  \r\n                    <Link to=\"/mypokemons\">\r\n                        <Badge variant=\"warning\">{pokemonMyList.length}</Badge>    \r\n                        <img className=\"poke-ball\" alt=\"\" src={pokeBall} />\r\n                    </Link>\r\n                </div>\r\n            </header>\r\n        </div>        \r\n    )    \r\n}\r\nexport default Header","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer>\r\n            <div className=\"container h-100\">\r\n                <div className=\"text-center d-flex align-items-center justify-content-center h-100\">\r\n                    <p className=\"my-2\">Pokemon App - Show Pokemons and their stats</p>\r\n                </div>                \r\n            </div>            \r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","const pokemonReducer = (state, action) => {\r\n    switch (action.type) {\r\n        //i could use one populate for all loads but it is eaiser to read this way\r\n        case \"POPULATE_POKEMON_LIST\":\r\n            return action.jsonListPokemons\r\n        case \"POPULATE_POKEMON\":\r\n            return action.jsonPokemon\r\n        case \"POPULATE_SPECIES\":\r\n            return action.jsonSpecies\r\n        case \"POPULATE_MY_POKEMONS\":\r\n            return action.pokemonMyList\r\n        case \"ADD_MY_POKEMONS\":\r\n            if(state===null) {\r\n                return [\r\n                    { id:action.id, name:action.name, url:action.url, img:action.img, checked:action.checked }\r\n                ]                \r\n            }\r\n            else {\r\n                return [\r\n                    ...state,\r\n                    { id:action.id, name:action.name, weight:action.weight, img:action.img, checked:action.checked, height:action.height }\r\n                ]                \r\n            }            \r\n        case \"REMOVE_MY_POKEMONS\":\r\n            return state.filter((pokemon) => pokemon.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport {pokemonReducer as default}","import React from \"react\"\r\n\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst LoaderImage = () => (\r\n    <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n)\r\nexport default LoaderImage;","export default __webpack_public_path__ + \"static/media/no-image.20a16888.png\";","import Axios from \"axios\";\r\nimport React, { useState, useEffect, Fragment, useContext } from \"react\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport PokemonContext from \"../context/pokemon-context\"\r\n\r\nimport LoaderImage from \"./Loader\"\r\nimport imgNotFound from '../img/no-image.png';\r\n\r\nconst CardPokemon = (props) => {\r\n    const [pokemon, setPokemon] = useState({})\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    const {pokemonMyList, pokemonMyListDispatch} = useContext(PokemonContext)\r\n\r\n    useEffect(()=>{\r\n        const ourRequest = Axios.CancelToken.source()\r\n        setIsLoaded(true)          \r\n        const loadData = async() => {\r\n            await Axios.get(props.url, {\r\n                cancelToken: ourRequest.token\r\n            }).then(function (response) {\r\n                // handle success\r\n                console.log(response.data)\r\n                pokemonMyList.map((item)=>{\r\n                    if(item.id===response.data.id) {\r\n                       return response.data[\"checked\"] = item.checked;\r\n                    }else {\r\n                        return null\r\n                    }                            \r\n                }).then(setPokemon(response.data))\r\n                \r\n            }).catch(function (thrown) {\r\n                if (Axios.isCancel(thrown)) {\r\n                    console.log('Request canceled', thrown.message);\r\n                } else {\r\n                    // handle error\r\n                }\r\n            });                          \r\n        }        \r\n        loadData()\r\n        setIsLoaded(false)\r\n        return () => { ourRequest.cancel() }       \r\n    },[props.url,pokemonMyList]) \r\n    \r\n    useEffect(()=>{\r\n        localStorage.setItem(\"pokemonList\", JSON.stringify(pokemonMyList)) \r\n    },[pokemonMyList])\r\n\r\n    const addToList = (e) => {        \r\n        if(e.target.checked) {\r\n            pokemonMyListDispatch({\r\n                type:\"ADD_MY_POKEMONS\",\r\n                id: pokemon.id,\r\n                name: pokemon.name,               \r\n                img: pokemon.sprites.other[\"official-artwork\"].front_default,\r\n                checked: true,\r\n                weight: pokemon.weight,\r\n                height: pokemon.height\r\n            }) \r\n\r\n        } else if(e.target.checked===false) {\r\n            pokemonMyListDispatch({\r\n                type:\"REMOVE_MY_POKEMONS\",\r\n                id: pokemon.id               \r\n            })\r\n        }            \r\n    }    \r\n    return(            \r\n        <Fragment>\r\n            {\r\n                isLoaded?<LoaderImage></LoaderImage>:pokemon.sprites && \r\n                <Fragment> \r\n                    <Link to={`/pokemon/${props.url.split('/pokemon/')[1].slice(0, -1)}`}>\r\n                        <img className=\"img-home\" src={\r\n                            pokemon.sprites.other[\"official-artwork\"].front_default ? pokemon.sprites.other[\"official-artwork\"].front_default :\r\n                            imgNotFound\r\n                        } alt={pokemon.name}/>                    \r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                {pokemon.types&&pokemon.types.map((item, i, arr)=>{\r\n                                    if (arr.length - 1 === i) {\r\n                                        return (<span className=\"type-span\" key={item.type.name}>\r\n                                        {item.type.name}\r\n                                        </span> )                                        \r\n                                    } else {\r\n                                        return (<span className=\"type-span\" key={item.type.name}>\r\n                                        {item.type.name} /&nbsp;\r\n                                        </span>)                                        \r\n                                    }                          \r\n                                })}\r\n                            </div>                        \r\n                            <p className=\"type-desc text-center\">Type</p>\r\n                        </div>\r\n                    </Link>\r\n                    <Form.Check onChange={e => addToList(e)}\r\n                        type=\"switch\"\r\n                        id={pokemon.id}\r\n                        label=\"Captured\" \r\n                        className=\"switch switch-danger\" \r\n                        defaultChecked={ pokemon.checked }            \r\n                    />                       \r\n                    <div>          \r\n                    </div>\r\n                </Fragment>                \r\n            }                                          \r\n        </Fragment>\r\n    )\r\n}\r\nexport default CardPokemon","import React from \"react\"\r\n\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst MainLoader = () => (\r\n    <div className=\"main-loader\">\r\n        <p>Loading...</p>\r\n        <Spinner className=\"main-spinner\" animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    </div>    \r\n)\r\nexport default MainLoader;","import React, { useState, useEffect, useReducer, Fragment } from \"react\"\r\nimport Axios from \"axios\";\r\nimport debounce from 'lodash.debounce';\r\n\r\nimport pokemonReducer from \"../reducers/pokemon\"\r\n\r\nimport CardPokemon from \"../components/CardPokemon\"\r\nimport MainLoader from \"../components/MainLoader\"\r\n\r\nconst ListOfPokemons = (props) => { \r\n    \r\n    const [jsonListPokemons, jsonDispatch ] = useReducer(pokemonReducer,[])\r\n    const [numberOnPage, setNumberOnPage] = useState((+props.match.params.page))\r\n    const [pageUrl, setPageUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/?offset=\"+((numberOnPage-1)*20))\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    const [numberOfPages,setNumberOfPages] = useState()\r\n\r\n    useEffect(()=>{\r\n        const ourRequest = Axios.CancelToken.source()\r\n        setIsLoaded(true)          \r\n        const loadData = async() => {\r\n            await Axios.get(pageUrl, {\r\n                cancelToken: ourRequest.token\r\n            }).then(function (response) {\r\n                // handle success\r\n                //handle all other loads\r\n                if(numberOnPage>=1&&numberOnPage<=Math.ceil(response.data.count/20)){\r\n                    jsonDispatch({type:\"POPULATE_POKEMON_LIST\", jsonListPokemons:response.data})\r\n                }\r\n                else if (!isNaN(numberOnPage)){\r\n                    return props.history.push(\"/page-not-found\")                     \r\n                } \r\n                //handle first load                \r\n                if(isNaN(numberOnPage)) {\r\n                    jsonDispatch({type:\"POPULATE_POKEMON_LIST\", jsonListPokemons:response.data})\r\n                    setNumberOnPage(1)                  \r\n                } \r\n                setNumberOfPages(Math.ceil(response.data.count/20))\r\n                setIsLoaded(false)               \r\n            }).catch(function (thrown) {\r\n                if (Axios.isCancel(thrown)) {\r\n                    console.log('Request canceled', thrown.message);\r\n                } else {\r\n                    // handle error\r\n                }\r\n            });                          \r\n        }        \r\n        loadData()\r\n        return () => { ourRequest.cancel()} \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps    \r\n    },[pageUrl])\r\n\r\n    const listOfPokemonsNext = () => { \r\n        setNumberOnPage(numberOnPage+1)\r\n        setPageUrl(\"https://pokeapi.co/api/v2/pokemon/?offset=\"+(numberOnPage*20))\r\n        props.history.push(\"/page/\"+(numberOnPage+1))      \r\n    }\r\n    const listOfPokemonsPrev = () => {\r\n        setNumberOnPage(numberOnPage-1)\r\n        setPageUrl(\"https://pokeapi.co/api/v2/pokemon/?offset=\"+((numberOnPage*20)-40))\r\n        props.history.push(\"/page/\"+(numberOnPage-1))\r\n    }\r\n    // prevent button from being called too quickly    \r\n    const clickPrev = debounce(listOfPokemonsPrev, 250)\r\n    const clickNext = debounce(listOfPokemonsNext, 250) \r\n    return(        \r\n        isLoaded?<MainLoader></MainLoader>:\r\n        <Fragment>          \r\n            <div className=\"buttons-next-prev\">\r\n                <button className=\"fs-2 fw-bold btn btn-warning\" disabled={!jsonListPokemons.previous} onClick={jsonListPokemons.previous&&clickPrev}>Prev</button>\r\n                <span className=\"fs-1 fw-bold\">{numberOnPage} / {numberOfPages}</span>\r\n                <button className=\"fs-2 fw-bold btn btn-warning\" disabled={!jsonListPokemons.next} onClick={jsonListPokemons.next&&clickNext}>Next</button>\r\n            </div>    \r\n            <div className=\"row align-items-stretch\">\r\n                {                                                                               \r\n                    jsonListPokemons.results && jsonListPokemons.results.map(({name,url},i) => {                        \r\n                        return(\r\n                            <div className=\"col-12 col-sm-6 col-lg-4 col-xl-3 d-flex align-items-stretch\" key={i}>\r\n                                <div className=\"pokemon-item d-flex justify-content-center text-capitalize\">    \r\n                                    <div>\r\n                                        <CardPokemon url={url} count={i}></CardPokemon>  \r\n                                        <p className=\"head-line-card d-block w-100 text-center\">{name}</p>                                                                             \r\n                                    </div> \r\n                                </div>                               \r\n                            </div>                        \r\n                        );                         \r\n                    })                    \r\n                }               \r\n            </div>                               \r\n        </Fragment>           \r\n    );\r\n}\r\nexport default ListOfPokemons","import React from \"react\"\r\n\r\nconst NotFoundPage = () => (\r\n    <div>404 - Page Not Found!</div>\r\n)\r\nexport default NotFoundPage","import React, {useState,useEffect} from \"react\"\r\nimport Axios from \"axios\";\r\n\r\nimport LoaderImage from \"./Loader\"\r\n\r\nconst LoadMovesPokemon = (props) => {\r\n    const [moves, setMoves] = useState({})\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        const ourRequest = Axios.CancelToken.source()\r\n        setIsLoaded(true)          \r\n        const loadData = async() => {\r\n            await Axios.get(props.url, {\r\n                cancelToken: ourRequest.token\r\n            }).then(function (response) {\r\n                // handle success\r\n                setMoves(response.data)\r\n                setIsLoaded(false) \r\n            }).catch(function (thrown) {\r\n                if (Axios.isCancel(thrown)) {\r\n                    console.log('Request canceled', thrown.message);\r\n                } else {\r\n                    // handle error\r\n                }\r\n            });                          \r\n        }        \r\n        loadData()\r\n        return () => { ourRequest.cancel() }\r\n    },[props.url])\r\n\r\n    return(            \r\n            isLoaded?<LoaderImage></LoaderImage>:moves&& \r\n            <div>\r\n                <div className=\"py-2\">\r\n                    <span className=\"text-capitalize type-span\">{moves.name}</span>    \r\n                    <p className=\"type-desc\">Name:</p>\r\n                </div> \r\n                <div className=\"\">\r\n                    <span className=\"text-effect type-span\"> \r\n                    {\r\n                            moves.effect_entries&&moves.effect_entries.map((item)=>(\r\n                                item.short_effect.replace(\"$effect_chance\", moves.effect_chance)\r\n                            )\r\n                        )\r\n                    }                 \r\n                    </span>\r\n                    <p className=\"type-desc\">Effect: \r\n                    </p>\r\n                </div>\r\n                <div className=\"pt-4 pb-2\">\r\n                    <div className=\"d-flex\">\r\n                    <div className=\"col-3 text-right text-capitalize\">\r\n                        <p className=\"type-desc\">Accuracy: </p>\r\n                    </div>\r\n                    <div className=\"col-7 col-md-8\">\r\n                        <div className=\"stat-bar-bck\">\r\n                            <div className={\"stat-bar-loading hp\"} style={{ width: (moves.accuracy / 250 * 100) + \"%\" }} >                                        \r\n                            </div>                                    \r\n                        </div>\r\n                    </div> \r\n                    <div className=\"col-1 text-left font-weight-bold\">\r\n                        <p>{moves.accuracy}</p>\r\n                    </div>               \r\n                </div>\r\n                    <div className=\"d-flex\">\r\n                    <div className=\"col-3 text-right text-capitalize\">\r\n                        <p className=\"type-desc\">Power: </p>\r\n                    </div>\r\n                    <div className=\"col-7 col-md-8\">\r\n                        <div className=\"stat-bar-bck\">\r\n                            <div className={\"stat-bar-loading attack\"} style={{ width: (moves.power / 250 * 100) + \"%\" }} >                                        \r\n                            </div>                                    \r\n                        </div>\r\n                    </div> \r\n                    <div className=\"col-1 text-left font-weight-bold\">\r\n                        <p>{moves.power}</p>\r\n                    </div>               \r\n                </div>\r\n                </div>                                           \r\n            </div> \r\n            )\r\n        }\r\nexport default LoadMovesPokemon","import React, {useContext} from \"react\"\r\nimport PokemonContext from \"../context/pokemon-context\";\r\n\r\nimport imgNotFound from '../img/no-image.png';\r\n\r\nconst ImagePokemon = () => {\r\n const {pokemon} = useContext(PokemonContext) \r\n\r\n return (\r\n    <img src={\r\n        pokemon.sprites.other[\"official-artwork\"].front_default ? pokemon.sprites.other[\"official-artwork\"].front_default :\r\n        imgNotFound\r\n    } alt={pokemon.name}/>\r\n )\r\n}\r\nexport default ImagePokemon","import React, {useState,useEffect,Fragment} from \"react\"\r\nimport Axios from \"axios\"\r\n\r\nimport LoaderImage from \"./Loader\"\r\nimport imgNotFound from '../img/no-image.png';\r\n\r\nconst EvolutionImage = (props) => {\r\n    const [pokemon, setPokemon] = useState({})\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        const ourRequest = Axios.CancelToken.source()\r\n        setIsLoaded(true)          \r\n        const loadData = async() => {\r\n            await Axios.get(props.url, {\r\n                cancelToken: ourRequest.token\r\n            }).then(function (response) {\r\n                // handle success                \r\n                setPokemon(response.data)\r\n            }).catch(function (thrown) {\r\n                if (Axios.isCancel(thrown)) {\r\n                    console.log('Request canceled', thrown.message);\r\n                } else {\r\n                    // handle error\r\n                }\r\n            });                          \r\n        }        \r\n        loadData()\r\n        setIsLoaded(false)\r\n        return () => { ourRequest.cancel() }       \r\n    },[props.url])   \r\n       \r\n    return(            \r\n        <Fragment>\r\n            {\r\n                isLoaded?<LoaderImage></LoaderImage>:pokemon.sprites && \r\n                <Fragment> \r\n                        <img className=\"img-home\" src={\r\n                            pokemon.sprites.other[\"official-artwork\"].front_default ? pokemon.sprites.other[\"official-artwork\"].front_default :\r\n                            imgNotFound\r\n                        } alt={pokemon.name}/>                    \r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                {pokemon.types&&pokemon.types.map((item, i, arr)=>{\r\n                                    if (arr.length - 1 === i) {\r\n                                        return (<span className=\"type-span\" key={item.type.name}>\r\n                                        {item.type.name}\r\n                                        </span> )                                        \r\n                                    } else {\r\n                                        return (<span className=\"type-span\" key={item.type.name}>\r\n                                        {item.type.name} /&nbsp;\r\n                                        </span>)                                        \r\n                                    }                          \r\n                                })}\r\n                            </div>                        \r\n                            <p className=\"type-desc text-center\">Type</p>\r\n                        </div>        \r\n                    <div>          \r\n                    </div>\r\n                </Fragment>                \r\n            }                                          \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EvolutionImage","import React, { useState, useEffect, useContext, Fragment } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport LoaderImage from \"./Loader\"\r\nimport EvolutionImage from \"./EvolutionImage\"\r\n\r\nimport PokemonContext from \"../context/pokemon-context\"\r\n\r\nconst Evolution = () => {\r\n    const [evo, setEvo] = useState({})\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    const {jsonSpecies} = useContext(PokemonContext)\r\n\r\n    useEffect(()=>{\r\n        const ourRequest = Axios.CancelToken.source()\r\n        setIsLoaded(true)          \r\n        const loadData = async() => {\r\n            await Axios.get(jsonSpecies.evolution_chain.url, {\r\n                cancelToken: ourRequest.token\r\n            }).then(function (response) {\r\n                // handle success\r\n                setEvo(response.data)\r\n                setIsLoaded(false) \r\n            }).catch(function (thrown) {\r\n                if (Axios.isCancel(thrown)) {\r\n                    console.log('Request canceled', thrown.message);\r\n                } else {\r\n                    // handle error\r\n                }\r\n            });                          \r\n        }        \r\n        loadData()\r\n        return () => { ourRequest.cancel() }\r\n    },[jsonSpecies.evolution_chain.url])\r\n    return (\r\n        isLoaded?<LoaderImage></LoaderImage>:\r\n            evo.chain.evolves_to.length > 0&&\r\n            <Fragment>\r\n                <div className=\"col-12 pt-5 pb-4\"><h3>Evolution</h3></div>\r\n                <div className=\"col-12 d-flex justify-content-center align-items-center flex-column flex-xl-row\">            \r\n                    {\r\n                        evo.chain.evolves_to[0]&&\r\n                        <div className=\"col-12 col-xl-3 py-3\">\r\n                            {\r\n                                <span className=\"type-span\">{evo.chain.evolves_to[0]&&evo.chain.species.name}</span>\r\n                            }\r\n                            {\r\n                                evo.chain.evolves_to[0]&&<EvolutionImage url={`https://pokeapi.co/api/v2/pokemon/${evo.chain.species.url.split('/pokemon-species/')[1].slice(0, -1)}`}></EvolutionImage>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    {\r\n                        evo.chain.evolves_to[0]&&\r\n                        <div className=\"col-12 col-xl-1 d-flex justify-content-center align-items-center py-5\">\r\n                        {\r\n                            evo.chain.evolves_to[0]&&<span><p className=\"evolution-arrow\">&#8594;</p><span>Level {evo.chain.evolves_to[0].evolution_details[0].min_level}</span></span>\r\n                        }\r\n                        </div>\r\n                    }\r\n                    {\r\n                        evo.chain.evolves_to[0]&&\r\n                        <div className=\"col-12 col-xl-3 py-3\">\r\n                        {\r\n                            <span className=\"type-span\">{evo.chain.evolves_to[0]&&evo.chain.evolves_to[0].species.name}</span>\r\n                        }\r\n                        {\r\n                            evo.chain.evolves_to[0]&&<EvolutionImage url={`https://pokeapi.co/api/v2/pokemon/${evo.chain.evolves_to[0].species.url.split('/pokemon-species/')[1].slice(0, -1)}`}></EvolutionImage>\r\n                        }\r\n                    </div>}\r\n                    {\r\n                        evo.chain.evolves_to[0].evolves_to[0]&&\r\n                        <div className=\"col-12 col-xl-1 d-flex justify-content-center align-items-center py-5\">\r\n                            {\r\n                                evo.chain.evolves_to[0].evolves_to[0]&&<span><p className=\"evolution-arrow\">&#8594;</p><span>Level {evo.chain.evolves_to[0].evolves_to[0].evolution_details[0].min_level}</span></span>\r\n                            }\r\n                        </div>\r\n                    }\r\n                    {\r\n                        evo.chain.evolves_to[0].evolves_to[0]&&\r\n                        <div className=\"col-12 col-xl-3 py-3\">\r\n                            {\r\n                                <span className=\"type-span\">{evo.chain.evolves_to[0].evolves_to[0]&&evo.chain.evolves_to[0].evolves_to[0].species.name}</span>\r\n                            }\r\n                            {\r\n                                evo.chain.evolves_to[0].evolves_to[0]&&<EvolutionImage url={`https://pokeapi.co/api/v2/pokemon/${evo.chain.evolves_to[0].evolves_to[0].species.url.split('/pokemon-species/')[1].slice(0, -1)}`}></EvolutionImage>\r\n                            }\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        \r\n    )\r\n}\r\nexport default Evolution","import React, { Fragment, useContext, useEffect, useReducer, useState } from \"react\"\r\nimport Axios from \"axios\"\r\nimport pokemonReducer from \"../reducers/pokemon\"\r\nimport PokemonContext from \"../context/pokemon-context\"\r\n\r\nimport Loader from \"./Loader\"\r\nimport Evolution from \"./Evolution\"\r\n\r\nconst Species = () => {\r\n    const [jsonSpecies, jsonDispatch] = useReducer(pokemonReducer,{})\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    const {pokemon} = useContext(PokemonContext)\r\n\r\n    useEffect(()=>{\r\n        const ourRequest = Axios.CancelToken.source()\r\n        setIsLoaded(true)\r\n        const loadData = async() => {\r\n            await Axios.get(pokemon.species.url, {\r\n                cancelToken: ourRequest.token\r\n            }).then(function(respons) {\r\n                //handle success\r\n                jsonDispatch({type:\"POPULATE_SPECIES\", jsonSpecies:respons.data})\r\n                setIsLoaded(false)\r\n            }).catch(function(thrown) {\r\n                if(Axios.isCancel(thrown)) {\r\n                    console.log(\"Request canceled\", thrown.message)\r\n                }\r\n                else {\r\n                    //handle error\r\n                }\r\n            })\r\n        }\r\n        loadData()\r\n        return () => {ourRequest.cancel()}\r\n    },[pokemon.species.url])\r\n\r\n    return(\r\n        <PokemonContext.Provider value={{jsonSpecies}}>\r\n        {\r\n            isLoaded?<Loader></Loader>:\r\n            <Fragment>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <span className=\"type-span\">\r\n                            {jsonSpecies.base_happiness&&jsonSpecies.base_happiness}\r\n                        </span>\r\n                    </div>                        \r\n                    <p className=\"type-desc\">Base happiness</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-4 type-line-x\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <span className=\"type-span\">\r\n                            {jsonSpecies.capture_rate&&jsonSpecies.capture_rate}\r\n                        </span>\r\n                    </div>                        \r\n                    <p className=\"type-desc\">Catch rate</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-4\">\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <span className=\"type-span\">\r\n                            {jsonSpecies.growth_rate&&jsonSpecies.growth_rate.name}\r\n                        </span>\r\n                    </div>                        \r\n                    <p className=\"type-desc\">Growth rate</p>\r\n                </div>\r\n                <Evolution></Evolution>\r\n            </Fragment>\r\n        }\r\n        </PokemonContext.Provider>\r\n        \r\n    )\r\n}\r\nexport default Species","import React, { useState, useEffect, useReducer, Fragment } from \"react\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Axios from \"axios\";\r\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\r\n\r\nimport pokemonReducer from \"../reducers/pokemon\"\r\nimport PokemonContext from \"../context/pokemon-context\"\r\n\r\nimport MainLoader from \"../components/MainLoader\"\r\nimport LoadMovesPokemon from \"../components/LoadMovesPokemon\";\r\nimport ImagePokemon from \"../components/ImagePokemon\";\r\nimport Species from \"../components/Species\"\r\n\r\nconst SinglePokemonPage = (props) => {\r\n    const [pokemon, jsonDispatch] = useReducer(pokemonReducer,{})\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        const ourRequest = Axios.CancelToken.source()\r\n        setIsLoaded(true)          \r\n        const loadData = async() => {\r\n            await Axios.get(`https://pokeapi.co/api/v2/pokemon/${props.match.params.id}`, {\r\n                cancelToken: ourRequest.token\r\n            }).then(function (response) {\r\n                // handle success\r\n                jsonDispatch({type:\"POPULATE_POKEMON\", jsonPokemon:response.data})\r\n                setIsLoaded(false) \r\n            }).catch(function (thrown) {\r\n                if (Axios.isCancel(thrown)) {\r\n                    console.log('Request canceled', thrown.message);\r\n                } else {\r\n                    // handle error\r\n                }\r\n            });                          \r\n        }        \r\n        loadData()\r\n        return () => { ourRequest.cancel() }\r\n    },[props.match.params.id])\r\n    return (\r\n    <PokemonContext.Provider value={{pokemon}}>        \r\n    {\r\n        isLoaded?<MainLoader></MainLoader>:\r\n        <Fragment>\r\n            <div className=\"buttons-next-prev\">\r\n                <button className=\"fs-2 fw-bold btn btn-warning\" onClick={()=>{ props.history.goBack() }}>Back</button>\r\n             </div>\r\n            <div className=\"container text-center\">           \r\n                <div className=\"row background-white margin-row-t justify-content-center\">               \r\n                    <div className=\"col-12 d-flex justify-content-center pokemon-image mb-4\">\r\n                        <ImagePokemon></ImagePokemon>                      \r\n                    </div>               \r\n                    <div className=\"col-12\"> <h1 className=\"text-capitalize text-center\">{pokemon.name}</h1> </div>\r\n                    <div className=\"col-12 py-4 type-line-bottom\"> \r\n                        <p>Experience gained for defeating this Pokémon: {pokemon.base_experience&&pokemon.base_experience}</p>\r\n                        <div className=\"d-md-flex py-4\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {\r\n                                        pokemon.types&&pokemon.types.map((item, i, arr)=>{                                    \r\n                                            if (arr.length - 1 === i) {\r\n                                                return (<span className=\"type-span\" key={item.type.name}>\r\n                                                {item.type.name}\r\n                                                </span> )                                        \r\n                                            } else {\r\n                                                return (<span className=\"type-span\" key={item.type.name}>\r\n                                                {item.type.name} /&nbsp;\r\n                                                </span>)                                        \r\n                                            }\r\n                                    })}\r\n                                </div>                        \r\n                                <p className=\"type-desc\">Type</p>\r\n                            </div>    \r\n                            <div className=\"col-12 col-md-6 type-line-left\">\r\n                                <span className=\"type-span\">{pokemon.weight&&pokemon.weight/10}</span><span className=\"type-desc\"> kg</span>\r\n                                <p className=\"type-desc\">Weight</p> \r\n                            </div>                                                                \r\n                        </div>\r\n                        <div className=\"d-md-flex py-4\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    {\r\n                                        pokemon.types&&pokemon.abilities.map((item, i, arr)=>{                                   \r\n                                            \r\n                                            if (arr.length - 1 === i) {\r\n                                                return (<span className=\"type-span\" key={item.ability.name}>\r\n                                                {item.ability.name} \r\n                                                </span> )                                        \r\n                                            } \r\n                                            else {\r\n                                                return (<span className=\"type-span\" key={item.ability.name}>\r\n                                                {item.ability.name} /&nbsp;\r\n                                                </span>)                                        \r\n                                            }\r\n                                    })}\r\n                                </div>                        \r\n                                <p className=\"type-desc\">Ability</p>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-6 type-line-left\">                            \r\n                                <span className=\"type-span\">{pokemon.height&&pokemon.height/10}</span><span className=\"type-desc\"> m</span>\r\n                                <p className=\"type-desc\">Height</p>\r\n                            </div> \r\n                        </div>                    \r\n                    </div>                           \r\n                    <div className=\"col-12 py-4 type-line-bottom\">\r\n                        <h3 className=\"pb-4\">Stats</h3>\r\n                        <div className=\"row\">\r\n                            {pokemon.stats&&pokemon.stats.map((item)=>(\r\n                                <div className=\"col-12 d-flex\" key={item.stat.name}>\r\n                                    <div className=\"col-3 text-right text-capitalize\">\r\n                                        <p className=\"type-desc\">{item.stat.name}</p>\r\n                                    </div>\r\n                                    <div className=\"col-7 col-md-8\">\r\n                                        <div className=\"stat-bar-bck\">\r\n                                            <div className={\"stat-bar-loading \" + item.stat.name} style={{ width: (item.base_stat / 200 * 100) + \"%\" }} >                                        \r\n                                            </div>                                    \r\n                                        </div>\r\n                                    </div> \r\n                                    <div className=\"col-1 text-left font-weight-bold\">\r\n                                        <p>{item.base_stat}</p>\r\n                                    </div>\r\n                                </div>                                                       \r\n                            ))}\r\n                        </div>        \r\n                    </div>\r\n                    <div className=\"col-12 py-4 type-line-bottom\">\r\n                        <h3 className=\"pb-4\">Training</h3>\r\n                        <div className=\"row\">\r\n                            <Species></Species> \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 py-4\">\r\n                        <h3 className=\"pb-4\">Moves</h3>\r\n                        <div className=\"row\">\r\n                            <Carousel className=\"moves-slider\" showThumbs={false} showIndicators={false}>\r\n                                {\r\n                                    pokemon.moves&&pokemon.moves.map((item)=>(\r\n                                        <div className=\"col-12 col-md-10\" key={item.move.name}>\r\n                                            <LoadMovesPokemon url={item.move.url}></LoadMovesPokemon>\r\n                                        </div>                                  \r\n                                    ))\r\n                                }   \r\n                            </Carousel>\r\n                        </div>\r\n                    </div>\r\n                </div>                   \r\n            </div>\r\n        </Fragment>        \r\n    }\r\n    </PokemonContext.Provider>\r\n    )\r\n}\r\nexport default SinglePokemonPage","import React, { Fragment, useContext } from \"react\"\r\n\r\nimport PokemonContext from \"../context/pokemon-context\"\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst MyPokemons = (props) => {\r\n\r\n    const {pokemonMyList, pokemonMyListDispatch} = useContext(PokemonContext)\r\n\r\n    return(\r\n        \r\n        <Fragment>\r\n            <div className=\"buttons-next-prev\">\r\n                <button className=\"fs-2 fw-bold btn btn-warning\" onClick={()=>{ props.history.goBack() }}>Back</button>\r\n            </div>\r\n            <div className=\"container text-center\">           \r\n                <div className=\"row background-white justify-content-center\">               \r\n                    {\r\n                    <Table bordered responsive>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Basic stats</th>\r\n                            <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {pokemonMyList.map((item)=>\r\n                            (                                                                   \r\n                                <tr key={item.id}>\r\n                                    <td><img height=\"100px\" alt={item.name} src={item.img} /></td>\r\n                                    <td className=\"text-capitalize\"><a href={\"/pokemon/\"+item.id}>{item.name}</a></td>\r\n                                    <td><span>Weight: {item.weight/10} kg</span> | <span>Height: {item.height/10} m</span></td>\r\n                                    <td><Button variant=\"danger\" onClick={()=>(\r\n                                        pokemonMyListDispatch({\r\n                                            type:\"REMOVE_MY_POKEMONS\",\r\n                                            id: item.id               \r\n                                        })\r\n                                    )}>X</Button></td>\r\n                                </tr>                                \r\n                            )\r\n                        )}\r\n                        </tbody>\r\n                    </Table>                        \r\n                    }                    \r\n                </div>                   \r\n            </div>\r\n        </Fragment> \r\n    )\r\n}\r\nexport default MyPokemons","import React from \"react\";\r\nimport Header from \"../components/Header\"\r\nimport Footer from \"../components/Footer\"\r\nimport HomePage from \"../pages/HomePage\"\r\nimport {BrowserRouter,Route,Switch} from \"react-router-dom\"\r\nimport NotFoundPage from \"../pages/NotFoundPage\";\r\nimport SinglePokemonPage from \"../pages/SinglePokemonPage\";\r\nimport MyPokemons from \"../pages/MyPokemons\"\r\n\r\n\r\nconst AppRouter = () => {\r\n    return(\r\n        \r\n        <BrowserRouter>\r\n            <Header></Header>  \r\n            <div className=\"container content\">\r\n                <Switch>\r\n                    <Route path=\"/\" component={HomePage} exact={true}></Route>\r\n                    <Route path=\"/mypokemons\" component={MyPokemons} ></Route>\r\n                    <Route path=\"/page/:page\" component={HomePage}></Route>\r\n                    <Route path=\"/pokemon/:id\" component={SinglePokemonPage}></Route>                \r\n                    <Route component={NotFoundPage}></Route>\r\n                </Switch>\r\n            </div>\r\n            <Footer></Footer>\r\n        </BrowserRouter>\r\n    )\r\n}\r\nexport default AppRouter;","import React, { useEffect, useReducer} from 'react';\n\nimport Router from \"./routers/Routers\"\n\nimport pokemonReducer from \"./reducers/pokemon\"\nimport PokemonContext from \"./context/pokemon-context\"\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './styles/app.css';\n\nconst App = () => {\n\n  const [pokemonMyList, pokemonMyListDispatch] = useReducer(pokemonReducer,[])\n  \n  useEffect(()=>{\n    const pokemonMyList = JSON.parse(localStorage.getItem(\"pokemonList\"))\n    pokemonMyListDispatch({type:\"POPULATE_MY_POKEMONS\", pokemonMyList})\n  },[])\n\n  return(\n    <PokemonContext.Provider value={{pokemonMyList, pokemonMyListDispatch}}>\n       \n       \n          <Router></Router>\n\n                \n    </PokemonContext.Provider>\n    \n  )\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}